name: ci-backtest
on:
  pull_request: { types: [opened, reopened, synchronize] }
  workflow_dispatch: {}
permissions: { contents: read }
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  backtest_and_gate:
    runs-on: ubuntu-latest
    env:
      BACKTEST_MODE: ci_offline
      OPENAI_DISABLED: "1"
      NO_MT5: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Find and run backtest
        shell: bash
        run: |
          set -euo pipefail
          ENTRY=$(git ls-files | grep -E '(^|/)run_backtest\.py$|(^|/)backtest_full_bot\.py$' | head -n1 || true)
          if [ -z "${ENTRY:-}" ]; then ENTRY="ci/backtest_stub.py"; fi
          echo "Using entrypoint: $ENTRY"
          test -f configs/ci.yaml || { echo "::error::configs/ci.yaml not found"; exit 1; }
          if python "$ENTRY" --config configs/ci.yaml --out metrics.json 2>/dev/null; then :; else python "$ENTRY"; fi
      - name: Upload metrics
        uses: actions/upload-artifact@v4
        with: { name: metrics, path: metrics.json }
      - name: Gate
        run: |
          python scripts/gate_metrics.py --file metrics.json --min_net 0 --min_win 0.45 --max_dd 0.20 --min_trades 30
      - name: Debug (always)
        if: always()
        run: |
          echo "== files =="; git ls-files | sed -n '1,200p'
          echo "== metrics =="; [ -f metrics.json ] && cat metrics.json || echo "no metrics"

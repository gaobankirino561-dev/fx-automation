name: ci-backtest

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 2 * * *"   # UTC 02:30 (JST 11:30)

jobs:
  backtest_and_gate:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Generate metrics from logs (deterministic)
        env:
          RISK_CFG: ${{ secrets.RISK_CFG }}
          INITIAL_EQUITY: "50000"
        shell: bash
        run: |
          set -euo pipefail
          DATE=$(date -u +%Y%m%d)
          rm -f metrics/metrics.csv || true
          python scripts/paper_metrics.py --root metrics --case ${DATE}_USDJPY_M15 --seed 1729 \
            --logs papertrade/logs/${DATE}_USDJPY_M15.csv
          python scripts/paper_metrics.py --root metrics --case ${DATE}_USDJPY_H1 --seed 1730 \
            --logs papertrade/logs/${DATE}_USDJPY_H1.csv
          python scripts/paper_metrics.py --root metrics --case ${DATE}_USDJPY_H4 --seed 1731 \
            --logs papertrade/logs/${DATE}_USDJPY_H4.csv
          cat metrics/metrics.csv

      - name: Gate (risk-aware thresholds)
        run: |
          python scripts/aggregate_gate.py --root metrics \
            --min_net 0 --min_win 0.45 --max_dd 0.20 --min_trades 30 \
            --min_pass_rate 1.0

      - name: Upload metrics artifact
        uses: actions/upload-artifact@v4
        with:
          name: metrics-pack
          path: metrics/metrics.csv

      - name: Notify Discord
        if: always()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          STATUS="${{ job.status }}"
          if [ -n "$WEBHOOK" ]; then
            curl -X POST -H "Content-Type: application/json" \
                 -d "{\"content\":\"ci-backtest: ${STATUS}\"}" "$WEBHOOK"
          else
            echo "DISCORD_WEBHOOK not set; skip notify."
